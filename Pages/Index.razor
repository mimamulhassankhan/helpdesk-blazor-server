@page "/"
@using System.Security.Claims;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Components.Authorization;
@inject UserManager<IdentityUser> _UserManager;
@inject RoleManager<IdentityRole> _RoleManager;

@if(CurrentUser.IsInRole(ADMINISTRATION_ROLE))
{
    <p>You are an Administrator name: <b>@CurrentUser.Identity.Name</b></p>
}

@code{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask {get; set;}
    ClaimsPrincipal CurrentUser = new ClaimsPrincipal();
    string ADMINISTRATION_ROLE = "Administrators";


    protected override async Task OnInitializedAsync(){
        var RoleResult = await _RoleManager.FindByNameAsync(ADMINISTRATION_ROLE);
        if(RoleResult == null){
        await _RoleManager.CreateAsync(new IdentityRole(ADMINISTRATION_ROLE));            
        }

        var user = await _UserManager.FindByNameAsync("Administrator@Email");

        if(user != null){
            var UserResult = await _UserManager.IsInRoleAsync(user, ADMINISTRATION_ROLE);

            if(!UserResult){
                await _UserManager.AddToRoleAsync(user, ADMINISTRATION_ROLE);
            }
        }

        CurrentUser = (await authenticationStateTask).User;


    }
}